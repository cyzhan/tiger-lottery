<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lottery.gaming.model.mapper.CompetitorMapper">
    <insert id="addCompetitorRef">
        INSERT IGNORE INTO sport_info.`betradar_competitors_ref_tournaments`
        (competitor_id, tournament_id, version, create_time, update_time)
        VALUES
        <foreach collection="competitors" item="item" separator=",">
            (#{item.id}, #{tournamentId}, 1, CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP())
        </foreach>
    </insert>
    <select id="getMainCompetitorInfo" resultType="lottery.gaming.model.vo.MainCompetitorRefVO">
        SELECT c.id, c.name_cn, c.name_en, bc.name_en AS b_name_en, bc.name_cn AS b_name_cn, bc2.name_en AS a_name_en, 
        bc2.name_cn  AS a_name_cn, bc.id AS b_id, bc2.id AS a_id, bc.age_group,  bc.gender
        FROM sport_info.competitors c
        LEFT JOIN sport_info.betradar_competitors bc ON c.id = bc.ref_id
        LEFT JOIN sport_info.bet188_competitors bc2 ON c.id = bc2.ref_id
        where c.sport_id = #{sportId}
        AND c.id IN
       <foreach collection="competitors" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getMergeCandidateByHomeDiff" resultType="lottery.gaming.model.io.CompetitorMergeIO">
        SELECT ${sportId} AS sportId, a.home_id AS competitorId1, b.home_id AS competitorId2
        FROM (
        SELECT rp.id, rp.tournament_id, rp.home_id, rp.away_id, rp.bet188_id, rp.scheduled
        FROM inno_odds.refactor_prematch rp
        WHERE rp.sport_id = #{sportId}
        AND rp.scheduled_date  = #{date}
        AND rp.betradar_id IS NULL
        AND rp.bet188_id IS NOT NULL
        ) AS a INNER JOIN (
        SELECT rp.id, rp.tournament_id, rp.home_id, rp.away_id, rp.betradar_id, rp.scheduled
        FROM inno_odds.refactor_prematch rp
        WHERE rp.sport_id = #{sportId}
        AND rp.scheduled_date  = #{date}
        AND rp.bet188_id IS NULL
        AND rp.betradar_id IS NOT NULL
        ) AS b ON a.tournament_id = b.tournament_id
        AND a.home_id &lt;&gt; b.home_id
        AND a.away_id = b.away_id
        AND a.scheduled = b.scheduled;
    </select>

    <select id="getMergeCandidateByAwayDiff" resultType="lottery.gaming.model.io.CompetitorMergeIO">
        SELECT ${sportId} AS sportId, a.away_id AS competitorId1, b.away_id AS competitorId2
        FROM (
        SELECT rp.id, rp.tournament_id, rp.home_id, rp.away_id, rp.bet188_id, rp.scheduled
        FROM inno_odds.refactor_prematch rp
        WHERE rp.sport_id = #{sportId}
        AND rp.scheduled_date  = #{date}
        AND rp.betradar_id IS NULL
        AND rp.bet188_id IS NOT NULL
        ) AS a INNER JOIN (
        SELECT rp.id, rp.tournament_id, rp.home_id, rp.away_id, rp.betradar_id, rp.scheduled
        FROM inno_odds.refactor_prematch rp
        WHERE rp.sport_id = #{sportId}
        AND rp.scheduled_date  = #{date}
        AND rp.bet188_id IS NULL
        AND rp.betradar_id IS NOT NULL
        ) AS b ON a.tournament_id = b.tournament_id
        AND a.home_id = b.home_id
        AND a.away_id &lt;&gt; b.away_id
        AND a.scheduled = b.scheduled;
    </select>
    <insert id="insertMergeLog" parameterType="lottery.gaming.model.response.data.CompetitorRefUpdateLog">
        INSERT INTO inno_odds.competitor_merge_log_tmp
        (`before`, updated, deleted, create_time)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.before}, #{item.updated}, #{item.deleted}, CURRENT_TIMESTAMP())
        </foreach>
    </insert>
</mapper>